package test;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.SQLException;

public class TestRun {
	/*
	 * JDBC용 객체
	 * 
	 * - Connection 겍체 : DB의 연결정보를 담고 있는 객체
	 * - [Prepared] Statement : 연결된 DB에 SQL문을 전달하여 실행하고
	 * 							그 결과를 받아주는 객체
	 * - ResultSet : DQL(SELECT)문 실행 후 조회 결과를 담고 있는 객체
	 * 
	 * JDBC 과정 (순서 중요)
	 * 	1) jdbc driver 등록 : 해당 DBMS(오라클)가 제공하는 클래스 등록
	 * 	2) Connection 객체 생성 : 연결히고자 하는 DB정보를 전달하여 해당 DB와 연결하면서 생성
	 * 			-> DB정보 : 접속 주소(url), 사용자명(username), 비밀번호(password)
	 * 	3) Statement 객체 생성 : Connection 객체를 이용하여 생성
	 * 							SQL문을 실행하고 결과를 받을 것임!
	 * 	4) SQL문을 DB에 전달하여 실행 : Statement 객체 사용
	 * 	5) 실행 결과를 받기(저장)
	 * 		- 1) DQL(SELECT)문 실행 -> ResultSet 객체 (=> 조회된 데이터들이 담겨있음)
	 * 		- 2) DML 실행 : int (=> 처리된 행 수) {commit | rollback}
	 * 	6) 결과에 대해 처리
	 * 		- 1) ResultSet 객체에 담겨져 있는 데이터들을 하나하나 꺼내서 VO객체에 옮겨 담기(저장)
	 * 		- 2) 트랜잭션 처리 (실행에 성공 - COMMIT , 실패한 경우 - ROLLBACK)
	 * 	7) 사용 후 JDBC용 객체들을 반납 (close)
	 * 		-> 생성 역순으로 close!! {마지막에 생성한 것을 먼저 닫고, 처음에 생성한 것은 마지막에 닫음}
	 */
	public static void main(String[] args) {
		// TEST 테이블에 데이터 추가
		insertTest();
	}
	public static void insertTest() {
		// DML(insert) => int (처리된 행 수) ---> 트랜잭션 처리 (commit|rollback)
		
		try {
			// 1) jdbc driver 등록
			Class.forName("oracle.jdbc.driver.OracleDriver");
			System.out.println("*오라클 드라이버 등록 완료*");
			
			// 2) Connection 객체 생성
			// 연결할 데이터베이스 정보(url, username, password)
			Connection conn = DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:xe"
															, "C##JDBC1"
															, "JDBC");
			System.out.println("*CONNECTION 객체 생성 완료*"); // 오라클 DB 접속 성공
		} catch (ClassNotFoundException e) {
			// TODO Auto-generated catch block, 예외발생 시 처리할 구문
			e.printStackTrace();
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
}