/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.102
 * Generated at: 2025-03-20 06:38:27 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.views;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class pizzaOrder_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(4);
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>피자 주문</title>\r\n");
      out.write("</head>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("	<h1>오늘은 <strong style=\"color: pink;\">2025-03-20 목요일</strong> 입니다.</h1>\r\n");
      out.write("	<h1>피자 아카데미</h1>\r\n");
      out.write("	\r\n");
      out.write("	<form action=\"/practice/orderpizza\" method=\"get\">\r\n");
      out.write("		<table border=\"1\">\r\n");
      out.write("			<tr>\r\n");
      out.write("				<th>종류</th>\r\n");
      out.write("				<th>이름</th>\r\n");
      out.write("				<th>가격</th>\r\n");
      out.write("				<th rowspan=\"12\" width=\"10\"></th> <!--여백공간 크기 키우는 방법: width 속성 사용-->\r\n");
      out.write("				<th>종류</th>\r\n");
      out.write("				<th>이름</th>\r\n");
      out.write("				<th>가격</th>\r\n");
      out.write("			</tr>\r\n");
      out.write("			<tr>\r\n");
      out.write("				<td rowspan=\"5\">피자</td>\r\n");
      out.write("				<td>치즈피자</td>\r\n");
      out.write("				<td>5000</td>\r\n");
      out.write("				<td rowspan=\"11\">사이드</td>\r\n");
      out.write("				<td>오븐구이</td>\r\n");
      out.write("				<td>9000</td>\r\n");
      out.write("			</tr>\r\n");
      out.write("			<tr>\r\n");
      out.write("	\r\n");
      out.write("				<td>콤비네이션피자</td>\r\n");
      out.write("				<td>6000</td>\r\n");
      out.write("				<td>치킨윙봉</td>\r\n");
      out.write("				<td>4900</td>\r\n");
      out.write("			</tr>\r\n");
      out.write("			<tr>\r\n");
      out.write("	\r\n");
      out.write("				<td>포테이토피자</td>\r\n");
      out.write("				<td>7000</td>\r\n");
      out.write("				<td>치즈오븐파스타</td>\r\n");
      out.write("				<td>4000</td>\r\n");
      out.write("			</tr>\r\n");
      out.write("			<tr>\r\n");
      out.write("				<td>고구마피자</td>\r\n");
      out.write("				<td>7000</td>\r\n");
      out.write("				<td>새우링</td>\r\n");
      out.write("				<td>3500</td>\r\n");
      out.write("			</tr>\r\n");
      out.write("			<tr>\r\n");
      out.write("	\r\n");
      out.write("				<td>불고기피자</td>\r\n");
      out.write("				<td>8000</td>\r\n");
      out.write("				<td>갈릭포테이토</td>\r\n");
      out.write("				<td>4000</td>\r\n");
      out.write("			</tr>\r\n");
      out.write("			<tr>\r\n");
      out.write("				<td rowspan=\"6\">포핑</td>\r\n");
      out.write("				<td>고구마무스</td>\r\n");
      out.write("				<td>1000</td>\r\n");
      out.write("				<td>콜라</td>\r\n");
      out.write("				<td>1500</td>\r\n");
      out.write("			</tr>\r\n");
      out.write("			<tr>\r\n");
      out.write("				<td>콘크림무스</td>\r\n");
      out.write("				<td>3000</td>\r\n");
      out.write("				<td>사이다</td>\r\n");
      out.write("				<td>1500</td>\r\n");
      out.write("			</tr>\r\n");
      out.write("			<tr>\r\n");
      out.write("				<td>파인애플 추가</td>\r\n");
      out.write("				<td>1000</td>\r\n");
      out.write("				<td>갈릭디핑</td>\r\n");
      out.write("				<td>1000</td>\r\n");
      out.write("			</tr>\r\n");
      out.write("			<tr>\r\n");
      out.write("				<td>치즈토핑</td>\r\n");
      out.write("				<td>1000</td>\r\n");
      out.write("				<td>피클</td>\r\n");
      out.write("				<td>500</td>\r\n");
      out.write("			</tr>\r\n");
      out.write("			<tr>\r\n");
      out.write("				<td>치즈크러스트</td>\r\n");
      out.write("				<td>2000</td>\r\n");
      out.write("				<td>핫소스</td>\r\n");
      out.write("				<td>500</td>\r\n");
      out.write("			</tr>\r\n");
      out.write("			<tr>\r\n");
      out.write("				<td>치즈바이트</td>\r\n");
      out.write("				<td>2000</td>\r\n");
      out.write("				<td>파마산치즈가루</td>\r\n");
      out.write("				<td>500</td>\r\n");
      out.write("			</tr>\r\n");
      out.write("		</table>\r\n");
      out.write("		피자: <select name=\"pizza\" id=\"pizza\">\r\n");
      out.write("				<option value=\"치즈피자\">치즈피자</option>\r\n");
      out.write("				<option value=\"콤비네이션\" >콤비네이션</option>\r\n");
      out.write("				<option value=\"포테이토피자\" >포테이토피자</option>\r\n");
      out.write("				<option value=\"고구마피자\" >고구마피자</option>\r\n");
      out.write("				<option value=\"불고기피자\">불고기피자</option>\r\n");
      out.write("			 </select>\r\n");
      out.write("		<br>	 \r\n");
      out.write("		토핑: \r\n");
      out.write("		<input type=\"checkbox\" name=\"topping\" id=\"topping\" value=\"고구마무스\">\r\n");
      out.write("		<label for=\"고무마쿠스\">고무마무스</label>\r\n");
      out.write("		<input type=\"checkbox\" name=\"topping\" id=\"topping\" value=\"콘크림무스\">\r\n");
      out.write("		<label for=\"콘크림무스\">콘크림무스</label>\r\n");
      out.write("		<input type=\"checkbox\" name=\"topping\" id=\"topping\" value=\"파인애플\">\r\n");
      out.write("		<label for=\"파인애플 추가\">파인애플 추가</label>\r\n");
      out.write("		<input type=\"checkbox\" name=\"topping\" id=\"topping\" value=\"치즈토핑\">\r\n");
      out.write("		<label for=\"치즈토핑\">치즈토핑</label>\r\n");
      out.write("		<input type=\"checkbox\" name=\"topping\" id=\"topping\" value=\"치즈크러스트\">\r\n");
      out.write("		<label for=\"치즈크러스트\">치즈크러스트</label>\r\n");
      out.write("		<input type=\"checkbox\" name=\"topping\" id=\"topping\" value=\"치즈바이트\">\r\n");
      out.write("		<label for=\"치즈바이트\">치즈바이트</label>\r\n");
      out.write("		<br>	 \r\n");
      out.write("		사이드: \r\n");
      out.write("		<input type=\"checkbox\" name=\"side\" id=\"side\" value=\"오븐구이\">\r\n");
      out.write("		<label for=\"오븐구이\">오븐구이</label>\r\n");
      out.write("	\r\n");
      out.write("		<input type=\"checkbox\" name=\"side\" id=\"side\" value=\"치킨윙봉\">\r\n");
      out.write("		<label for=\"치킨윙봉\">치킨윙봉</label>\r\n");
      out.write("	\r\n");
      out.write("		<input type=\"checkbox\" name=\"side\" id=\"side\" value=\"치즈오븐파스타\">\r\n");
      out.write("		<label for=\"치즈오븐파스타\">치즈오븐파스타</label>\r\n");
      out.write("	\r\n");
      out.write("		<input type=\"checkbox\" name=\"side\" id=\"side\" value=\"새우링\">\r\n");
      out.write("		<label for=\"새우링\">새우링</label>\r\n");
      out.write("	\r\n");
      out.write("		<input type=\"checkbox\" name=\"side\" id=\"side\" value=\"갈릭포테이토\">\r\n");
      out.write("		<label for=\"갈릭포테이토\">갈릭포테이토</label>\r\n");
      out.write("	\r\n");
      out.write("		<input type=\"checkbox\" name=\"side\" id=\"side\" value=\"콜라\">\r\n");
      out.write("		<label for=\"콜라\">콜라</label>\r\n");
      out.write("	\r\n");
      out.write("		<input type=\"checkbox\" name=\"side\" id=\"side\" value=\"사이다\">\r\n");
      out.write("		<label for=\"사이다\">사이다</label>\r\n");
      out.write("	\r\n");
      out.write("		<input type=\"checkbox\" name=\"side\" id=\"side\" value=\"갈릭디핑\">\r\n");
      out.write("		<label for=\"갈릭디핑\">갈릭디핑</label>\r\n");
      out.write("	\r\n");
      out.write("		<input type=\"checkbox\" name=\"side\" id=\"side\" value=\"피클\">\r\n");
      out.write("		<label for=\"피클\">피클</label>\r\n");
      out.write("	\r\n");
      out.write("		<input type=\"checkbox\" name=\"side\" id=\"side\" value=\"핫소스\">\r\n");
      out.write("		<label for=\"핫소스\">핫소스</label>\r\n");
      out.write("	\r\n");
      out.write("		<input type=\"checkbox\" name=\"side\" id=\"side\" value=\"파마산치즈가루\">\r\n");
      out.write("		<label for=\"파마산치즈가루\">파마산치즈가루</label>\r\n");
      out.write("		<br>\r\n");
      out.write("		<button type=\"submit\">주문하기</button>\r\n");
      out.write("	</form>\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
